{"version":3,"sources":["webpack:////home/travis/build/signalwerk/typesetting/themes/gatsby-theme-signalwerk/src/templates/Post/index.js"],"names":["BlogPostTemplate","render","post","this","props","data","siteTitle","get","siteDescription","location","htmlAttributes","lang","meta","name","content","title","className","words","author","date","dangerouslySetInnerHTML","__html","html","components","React","Component","pageQuery"],"mappings":"gRAaMA,E,gLACJC,kBACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAxB,KACMC,EAAYC,IAAIJ,KAAD,MAArB,gCACMK,EAAkBN,EAHjB,QAMP,OACE,uBAAQO,SAAUN,KAAKC,MAAMK,UAC3B,uBACEC,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAF,cAAuBC,QAASN,IACvCO,MAAUb,cAAL,YAAiCI,IAGxC,yBAAKU,UAAU,qBACb,uBACEC,MAAOf,YADT,MAEEgB,OAAQhB,cAFV,OAGEiB,KAAMjB,cAAiBiB,QAG3B,4BAAKjB,cAdP,OAgBGA,2BACC,yBAAKc,UAAU,gBACb,wBAAIA,UAAU,qBACXd,cAnBT,cAwBE,yBAAKkB,wBAAyB,CAAEC,OAAQnB,EAAKoB,QAE7C,iCAAaC,WAAY,IACvB,qCACGrB,EA5BP,OA+BE,uBA/BF,MAgCE,uBAhCF,MAiCE,uBAlCJ,Q,GAP2BsB,IAAMC,WAmErC,YAEO,IAAMC,EAAN,c","file":"component---themes-gatsby-theme-signalwerk-src-templates-post-index-js-159c5359b3899dd87b6d.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { MDXProvider } from \"@mdx-js/react\"\n\nimport get from 'lodash/get'\n\nimport Meta from '../../components/Meta'\nimport Layout from '../../components/layout'\n\nimport './styles.css'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.post\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const siteDescription = post.excerpt\n    // const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n\n        <div className=\"post-single__meta\">\n          <Meta\n            words={post.wordCount.words}\n            author={post.frontmatter.author}\n            date={post.frontmatter.date}\n          />\n        </div>\n        <h1>{post.frontmatter.title}</h1>\n\n        {post.frontmatter.description && (\n          <div className=\"column__text\">\n            <h2 className=\"post-single__lead\">\n              {post.frontmatter.description}\n            </h2>\n          </div>\n        )}\n\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n\n        <MDXProvider components={{}}>\n          <MDXRenderer>\n            {post.body}\n          </MDXRenderer>\n        </MDXProvider>\n        <br />\n        <br />\n        <br />\n\n{/*\n        <hr />\n        <ul>\n          {previous && (\n            <li>\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            </li>\n          )}\n          {next && (\n            <li>\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            </li>\n          )}\n        </ul>\n*/}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    post: mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      body\n      frontmatter {\n        title\n        author\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      wordCount {\n        words\n      }\n    }\n  }\n`\n"],"sourceRoot":""}