{"version":3,"sources":["webpack:////home/travis/build/signalwerk/typesetting/themes/gatsby-theme-signalwerk/src/pages/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:////home/travis/build/signalwerk/typesetting/themes/gatsby-theme-signalwerk/src/components/Meta/index.js","webpack:////home/travis/build/signalwerk/typesetting/themes/gatsby-theme-signalwerk/src/components/layout.js"],"names":["BlogIndex","render","siteTitle","get","this","siteDescription","posts","react_default","a","createElement","layout","location","props","Helmet_default","htmlAttributes","lang","meta","name","content","title","map","_ref","node","className","key","fields","slug","gatsby_browser_entry","to","Meta","author","frontmatter","date","description","dangerouslySetInnerHTML","__html","excerpt","React","Component","Fragment","pages","homeQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","str","_this$props","words","timeToRead","Math","round","react__WEBPACK_IMPORTED_MODULE_2___default","Date","parse","toLocaleDateString","year","month","day","replace","Template","header","__PATH_PREFIX__","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-index-js-24d904081c91fc22684c.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Meta from '../components/Meta'\nimport Layout from '../components/layout'\nimport './styles.css'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        {/*        <Bio\n            author={`${siteAuthor}`}\n            authorUrl={`${siteAuthorUrl}`}\n          />*/}\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || '--no title--'\n          return (\n            <div className=\"Index--item\" key={node.fields.slug}>\n\n\n              <h2 className=\"Index--title\">\n                <Link to={node.fields.slug}>{title}</Link>\n              </h2>\n              <div className=\"Index--meta\">\n                  <Meta\n                    author={node.frontmatter.author}\n                    date={node.frontmatter.date}\n                  />\n              </div>\n              {(node.frontmatter.description && (\n                <p>{node.frontmatter.description}</p>\n              )) || <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />}\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        authorUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            author\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import  React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Index from \"gatsby-theme-signalwerk/src/pages\";\n\n\n\nclass BlogIndex extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Index {...this.props} />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const homeQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        authorUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            author\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nimport './styles.css'\n\n\n// https://help.medium.com/hc/en-us/articles/214991667-Read-time\n// http://iovs.arvojournals.org/article.aspx?articleid=2166061\n// german: words: 179, Characters: 920\nconst avgWPM = 179\n\nconst printDate = str => {\n  const parsedDate = new Date(Date.parse(str))\n  const date = parsedDate.toLocaleDateString('de-CH', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  })\n\n  return date\n}\n\nclass Meta extends React.Component {\n  render() {\n    const { author, date, words } = this.props\n\n    const timeToRead = Math.round((words || 1) / avgWPM) || 1\n\n    return (\n      <div className=\"Meta--root\">\n        {words && (\n          <span className=\"Meta--timeToRead\">\n            ~{timeToRead}\n            &nbsp;min\n            <span className=\"Meta--dot\"> · </span>\n          </span>\n        )}\n        {author}\n        <span className=\"Meta--dot\"> · </span>\n        {printDate(date).replace(/ /g, '\\u00a0')}\n      </div>\n    )\n  }\n}\n\nexport default Meta\n","/* eslint-disable */\nimport React from 'react'\nimport { Link } from 'gatsby'\n\nimport './App/css/fonts-var.css'\nimport './App/css/fonts.css'\nimport './Html/styles.css'\nimport './Headings/styles.css'\nimport './P/styles.css'\nimport './A/styles.css'\nimport './Img/styles.css'\n\nimport './style.css'\n\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1>\n        Blog\n        </h1>\n      )\n    } else {\n      header = (\n        <h3>\n          <Link to={'/'}>← Home</Link>\n        </h3>\n      )\n    }\n    return (\n      <div className=\"layout--content\">\n        {header}\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Template\n"],"sourceRoot":""}